server.port=8989
spring.application.name=stream-server


#\u5BF9\u8F93\u5165\u548C\u8F93\u51FA\u6307\u5B9A\u7ED1\u5B9A\u7684\u961F\u5217
spring.cloud.stream.bindings.msg_input.destination=hello
spring.cloud.stream.bindings.msg_output.destination=hello

##\u6D88\u8D39\u8005\u5E94\u7528\u914D\u7F6E\u5206\u533A
#\u5F00\u542F\u5206\u533A\uFF08\u9700\u8981\u591A\u4E2A\u5B9E\u4F8B\uFF09
#spring.cloud.stream.bindings.msg_input.consumer.partitioned=true
#\u5206\u533A\u5185\u7684\u5F53\u524D\u6D88\u8D39\u8005\u7684\u603B\u5B9E\u4F8B\u6570
#spring.cloud.stream.instance-count=2
#\u5B9E\u4F8B\u6570\u7684\u7D22\u5F15
#spring.cloud.stream.instance-index=0

##\u751F\u4EA7\u8005\u5E94\u7528\u914D\u7F6E\u5206\u533A
#\u8BBE\u7F6E\u5206\u533A\u952E\u7684\u89C4\u5219
#spring.cloud.stream.bindings.msg_output.producer.partition-key-expression=payload
#\u8BBE\u7F6E\u5206\u533A\u6570
#spring.cloud.stream.bindings.msg_output.producer.partition-count=2